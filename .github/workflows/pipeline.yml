name: "Build and release jvc"

on:
  pull_request:
  push:
    branches:
      - main
jobs:
  unit_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: stable
    - uses: actions/checkout@v2
    - name: Run tests
      run: cargo test
      
build_release:
    runs-on: windows-latest
    name: "Release jvc for Windows"
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: stable

    - uses: actions/checkout@v2
    - name: Build release binary
      run: cargo build --release

    - uses: actions/upload-artifact@v2
      with:
        name: jvc-windows
        path: target/release/jvc.exe

  build_macos_release:
    runs-on: macOS-latest
    name: "Release jvc for MacOS"
    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: stable

    - uses: actions/checkout@v2
    - name: Build release binary
      run: cargo build --release
      env:
        LZMA_API_STATIC: "true"
    - name: Strip binary from debug symbols
      run: strip target/release/jvc
    - name: List dynamically linked libraries
      run: otool -L target/release/jvc

    - uses: actions/upload-artifact@v2
      with:
        name: jvc-macos
        path: target/release/jvc

  build_linux_binary:
    name: "Release jvc for Linux"
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
    - name: Build binary
      run: cargo build --release

    - uses: actions/upload-artifact@v2
      with:
        name: jvc-linux
        path: target/release/jvc
